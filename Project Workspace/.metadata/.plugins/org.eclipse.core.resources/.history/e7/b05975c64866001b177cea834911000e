package Domain;

import java.util.ArrayList;

import org.json.simple.parser.ParseException;

import Presentation.ControllerObserver;
import Presentation.ControllerSubject;

public class ControllerCommunicator implements ControllerSubject, ControllerObserver{

	@Override
	public void registerControllerObserver(ControllerObserver c) {
		
		this.controllers.add(c);
	}

	@Override
	public void removeControllerObserver(ControllerObserver c) {
		
		this.controllers.remove(c);
	}
	
	public String addOrder(String jorder){
		
		try {
			
			Order order = this.jmodule.parseOrder(jorder);
			this.orders.add(order);
			return this.notifyControllerObserver(order);
		}
		
		catch (ParseException e) {

			System.out.println("ERROR: Invalid Order Format.");
		}
		
		return null;
	}

	@Override
	//would normally send data to identified controller, but will print out instead for testing
	public String notifyControllerObserver(Order o) {
		
		String jcommand = o.constructCommand();
		return jcommand;
	}
}

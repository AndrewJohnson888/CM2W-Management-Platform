import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class JFactory {
	
	private JSONParser jparser;

	public JFactory(){
		
		this.jparser = new JSONParser();
	}
	
	public JParserBehavior determineParsingBehavior(String jstring) throws ParseException{
		
		JSONObject jobject = (JSONObject) this.jparser.parse(jstring);
		JSONObject jorder = (JSONObject) jobject.get("order");
		
		if (jorder.containsKey("condiments")) return new AutomatedJParser();
		return new SimpleJParser();
	}
	
	public JConstructorBehavior determineConstructorBehavior(Order o){
		
		switch(o.getOrderType()){
		
			case "Simple":
				return new SimpleJConstructor();
			case "Automated":
				return new AutomatedJConstructor();
		}
		
		System.out.println("ERROR: Unrecognized order type.");
		return null;
	}
}

package Domain;

import java.util.ArrayList;

import org.json.simple.parser.ParseException;

import Presentation.AppObserver;
import Presentation.AppSubject;

public class AppCommunicator implements AppObserver, AppSubject{

	private SubsystemController sc;
	
	public AppCommunicator(){
		
		this.sc = SubsystemController.getInstance();
	}
	
	@Override
	public void registerAppObserver(AppObserver a) {
		
		this.apps.add(a);
	}

	@Override
	public void removeAppObserver(AppObserver a) {
		
		this.apps.remove(a);
	}
	
	public String addOrder(String jorder){
		
		try {
			
			Order order = this.jmodule.parseOrder(jorder);
			this.orders.add(order);
			return this.notifyControllerObserver(order);
		}
		
		catch (ParseException e) {

			System.out.println("ERROR: Invalid Order Format.");
		}
		
		return null;
	}

	@Override
	//would normally send data to identified app, but will print out instead for testing
	public String notifyAppObserver(Order o) {
		
		String jresponse = o.constructResponse();
		return jresponse;
	}
}

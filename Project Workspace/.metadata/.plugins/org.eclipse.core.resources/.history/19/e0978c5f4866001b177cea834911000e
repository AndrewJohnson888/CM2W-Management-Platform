package Domain;

import java.util.ArrayList;

import org.json.simple.parser.ParseException;

import Presentation.AppObserver;
import Presentation.AppSubject;

public class AppCommunicator implements AppObserver, AppSubject{
	

	private ArrayList<Order> orders;

	@Override
	public void registerAppObserver(AppObserver a) {
		
		this.apps.add(a);
	}

	@Override
	public void removeAppObserver(AppObserver a) {
		
		this.apps.remove(a);
	}
	
	public String drinkResponse(String jresponse){
		
		try {
			
			Response response = this.jmodule.parseResponse(jresponse);
			
			for (Order o : this.orders){
				
				if (o.checkID(response.getOrderID())){
					
					o.updateStatus(response.getStatus(), 
								   response.getMessage());
					
					
					return this.notifyAppObserver(o);
				}
			}
			
			System.out.println("Error: Order not found.");
			return null;
		} 
		
		catch (ParseException e) {

			System.out.println("ERROR: Invalid Response Format.");
		}
		
		return null;
	}

	@Override
	//would normally send data to identified app, but will print out instead for testing
	public String notifyAppObserver(Order o) {
		
		String jresponse = o.constructResponse();
		return jresponse;
	}

}

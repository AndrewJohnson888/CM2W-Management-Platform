import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class ControllerLocator {
	
	private final String databaseString = "src/";
	private final String coffeeMakerFile = "CoffeeMaker";
	private final String controllerFile = "Controller";

	public ControllerLocator(){
		
		
	}
	
	public int getControllerID(String street, String zip){
		
		HashMap<String, ArrayList<String>> controllerTable = this.getControllerTable();
		
		for (String id : controllerTable.keySet()){
			
			if (controllerTable.get(id).get(1).equals(street) && controllerTable.get(id).get(2).equals(zip)){
				
				return Integer.parseInt(id);
			}
		}
		
		return -1;
	}
	
	public int getCoffeeMachineID(int controllerID, String drink){
		
		
	}
	
	private HashMap<String, ArrayList<String>> getCoffeeMakerTable(){
		
		return this.readTable(this.coffeeMakerFile);
	}
	
	private HashMap<String, ArrayList<String>> getControllerTable(){
		
		return this.readTable(this.controllerFile);
	}
	
	private HashMap<String, ArrayList<String>> readTable(String filename){
		
		try {
			
			HashMap<String, ArrayList<String>> table = new HashMap<String, ArrayList<String>>();
			
			Scanner scanner = new Scanner(new File(this.databaseString + filename));

			String name;
			String description;
			
			while (scanner.hasNext()){
				
				name = scanner.nextLine();

				description = scanner.nextLine();
				ArrayList<String> fields = new ArrayList<String>();
				while(!description.trim().isEmpty()){
					
					fields.add(description);
					
					if (!scanner.hasNext()) break;
					
					description = scanner.nextLine();
				}
				
				table.put(name, fields);
			}
			
			scanner.close();
			
			return table;
		} 
		
		catch (FileNotFoundException e) {
			
			System.out.println("ERROR: " + filename + " Table was not found.");
		}
		
		return null;
	}
}

import java.util.ArrayList;
import java.util.HashMap;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class ProgrammableCommand implements CommandBehavior {

	@Override
	public String createCommand(int controllerID, int machineID, int orderID, String drink, HashMap<String, Integer> options, ArrayList<String> recipe) {
		
		JSONObject jobject = new JSONObject();
		
		JSONObject jcommand = new JSONObject();
		jcommand.put("controller_id", controllerID);
		jcommand.put("coffee_machine_id", machineID);
		jcommand.put("orderID", orderID);
		jcommand.put("DrinkName", drink);
		jcommand.put("Requesttype", "Programmable");
		
		JSONArray joptions = new JSONArray();
		
		for (String s : options.keySet()){
			
			JSONObject item = new JSONObject();
			item.put("name", s);
			item.put("qty", options.get(s));
			joptions.add(item);
		}
		
		JSONArray jrecipe = new JSONArray();
		
		for (String s : recipe){
			
			JSONObject item = new JSONObject();
			item.put("commandstep", "add");
			item.put("object", s);
			jrecipe.add(item);
		}
		
		jcommand.put("Options:", joptions);
		jcommand.put("Recipe", jrecipe);
		
		jobject.put("command", jcommand);
		
		return jobject.toJSONString();
	}
}

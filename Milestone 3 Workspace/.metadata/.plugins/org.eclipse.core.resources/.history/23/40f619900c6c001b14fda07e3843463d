
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Queue;

public class AppCommunicator implements AppSubject{
	
	private static AppCommunicator uniqueInstance = new AppCommunicator();
	private static int NEXT_APP_ID = 0;
	
	private Queue<String> orderQueue;
	private HashMap<Integer, AppObserver> apps;

	public AppCommunicator(){ 
		
		this.orderQueue = new LinkedList<String>();
		this.apps = new HashMap<Integer, AppObserver>();
	}
	
	public void notifyAppObserver(Order order, int appID){
		
		String jresponse = order.createResponse();
	}
	
	public static AppCommunicator getInstance(){
		
		return AppCommunicator.uniqueInstance;
	}
	
	public void addOrder(String order){ this.orderQueue.add(order); }
	public String pollOrder(){ return this.orderQueue.poll(); }

	@Override
	public void registerAppObserver(AppObserver app) {
		
		this.apps.put(NEXT_APP_ID, app);
		NEXT_APP_ID ++;
	}

	@Override
	public void removeAppObserver(AppObserver app) {
		
		for (int key : this.apps.keySet()){
			
			if (this.apps.get(key).equals(app)) this.apps.remove(key);
		}
	}
}

import java.util.HashMap;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class JSONModule {
	
	private JSONParser jparser;
	private HashMap<String, String> fields;
	private HashMap<String, Integer> condiments;
	
	public JSONModule(){
		
		this.jparser = new JSONParser();
		this.fields = new HashMap<String, String>();
		this.condiments = new HashMap<String, Integer>();
	}
	
	private JSONObject parseString(String s){
		
		try {
			
			return (JSONObject) this.jparser.parse(s);
		} 
		
		catch (ParseException e) {

			System.out.println("ERROR: Could not find field in JSON string: " + s);
		}
		
		return null;
	}
	
	private JSONObject getJSON(JSONObject jobject, String s){
		
		return (JSONObject) jobject.get(s);
	}
	
	private JSONArray getArray(JSONObject jobject, String s){
		
		return (JSONArray) jobject.get(s);
	}
	
	private String getString(JSONObject jobject, String s){
		
		return (String) jobject.get(s);
	}
	
	private int getLongToInteger(JSONObject jobject, String s){
		
		long jitem = (long) jobject.get(s);
		return (int) jitem;
	}
	
	private String getLongToString(JSONObject jobject, String s){
		
		long jitem = (long) jobject.get(s);
		return Long.toString(jitem);
	}
	
	public void parseOrder(String order){
		
		try {
		
			JSONObject jorder = this.parseString(order);
			jorder = this.getJSON(jorder, "order");
			
			JSONArray jcondiments = this.getArray(jorder, "condiments");
			
			if (jcondiments != null){
				
				JSONObject item;
				String name;
				int qty;
				
				for (int i = 0; i < jcondiments.size(); i++){
					
					item = (JSONObject) jcondiments.get(i);
					name = this.getString(item, "name");
					qty = this.getLongToInteger(item, "qty");
					this.condiments.put(name, qty); 
				}
			}
			
			long ORDERID = (long) jorder.get("orderID");
			String orderID = Long.toString(ORDERID);
			this.fields.put("orderID", orderID);
			
			this.fields.put("drink", this.getString(jorder, "drink"));
			
			JSONObject jaddress = (JSONObject) jorder.get("address");
			this.fields.put("street", this.getString(jaddress, "street"));
			
			long ZIP = (long) jaddress.get("ZIP");
			String zip = Long.toString(ZIP);
			this.fields.put("zip", zip);
			
		}
		
		catch(ParseException e){
			
			System.out.println("ERROR: Unable to parse order.");
		}
	}
}
